(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{362:function(t,s,e){"use strict";e.r(s);e(45);var n=e(214),a={props:["tvId","episodeNumber","seasonNumber"],data:function(){return{results:[]}},mounted:function(){var t=this;this.$nuxt.$on("changeSeason",(function(s){t.seasonNumber=s}))},watch:{seasonNumber:function(t){this.getEpisodes(t)}},created:function(){this.getEpisodes(this.seasonNumber)},methods:{getEpisodes:function(t){var s=this,e={api_key:n.API_KEY,language:this.$i18n.locale};this.$axios.$get("/tv/".concat(this.tvId,"/season/").concat(t),{params:e}).then((function(t){s.results=t}))},top:function(t){$nuxt.$emit("play",t)}}},i=e(14),o=Object(i.a)(a,(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"mb-4"},[e("h3",{staticClass:"h5 mb-3 text-muted"},[t._v(t._s(t.$t("Episodes")))]),t._v(" "),e("div",{staticClass:"list-group"},t._l(t.results.episodes,(function(s,n){return e("a",{key:n,staticClass:"list-group-item bg-dark text-decoration-none cast_name py-3",attrs:{href:"#"},on:{click:function(e){return e.preventDefault(),t.top(s.episode_number)}}},[e("div",[e("span",{staticClass:"text-muted fw-bolder"},[t._v("S"+t._s(t.results.season_number)+" E"+t._s(s.episode_number)+" - ")]),t._v(" "+t._s(s.name)+"\n                ")])])})),0)])}),[],!1,null,null,null);s.default=o.exports}}]);